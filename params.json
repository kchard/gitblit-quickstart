{"name":"gitblit-quickstart","tagline":"Getting started with Gitblit - Configuring Gitblit as a service with runit ","body":"### Abstract\r\n\r\nThe purpose of this tutorial is to get you up and running with Gitbllit as quickly as possible. Gitblit is an open-source, pure Java stack for managing, viewing, and serving Git repositories. In this tutorial we will setup a stock Gitblit installation using runit for service management.\r\n\r\n### What You Will Learn\r\n\r\n1. How to install Gitblit\r\n2. How to setup runit to manage Gitblit\r\n\r\n### 0. Prerequisites\r\n\r\nMake sure that you java Java installed on your system. To verify that Java is installed execute the command:\r\n\r\n```\r\n# java -version\r\n```\r\n\r\nYou should see some output that looks something like this:\r\n```\r\njava version \"1.7.0_25\"\r\nOpenJDK Runtime Environment (IcedTea 2.3.10) (7u25-2.3.10-1~deb7u1)\r\nOpenJDK Client VM (build 23.7-b01, mixed mode, sharing)\r\n```\r\n\r\nIf you see an error, consult the documentation on how to install Java for your platform.\r\n\r\nAdditionally, you will need ```runit``` installed. If you are unfamiliar with ```runit```, you may want to read the following tutorial before continuing. \r\n\r\n[Getting started with the runit - a UNIX init scheme with service supervision](http://kchard.github.io/runit-quickstart/)\r\n\r\n### 1. Installing Gitblit\r\n\r\nThe first thing that we need to do is create a user to run Gitblit with. Add a new user named ```gitblit``` using the method provided by your Linux distribution. For example, on Debain you can add the user with the the following command:\r\n\r\n```\r\n# adduser gitblit\r\n```\r\n\r\nNext, let's create a directory to install Gitblit in and change its ownership to the ```gitblit``` user. You can install Gitblit in any location you wish. I like to install it in the ```/opt``` directory. \r\n\r\n```\r\n# mkdir /opt/gitblit\r\n# chown gitblit:gitblit /opt/gitblit\r\n```\r\n\r\nThe only artifact that we need to install Gitbllit is the GO archive downloaded from the [Gitblit Website](http://gitblit.com/). \r\n\r\nChange to the ```gitblit``` user, navigate to the Gitblit installation directory, and download the zip.\r\nAs of this writing the latest version is 1.3.2.\r\n```\r\n# su gitblit\r\n# cd /opt/gitblit\r\n# wget http://gitblit.googlecode.com/files/gitblit-1.3.2.zip\r\n```\r\n\r\nGitblit is provided as an executable jar with an embedded web server. There is no need to deploy the war in a servlet container such as Tomcat. \r\n\r\nBy default Gitblit will only be available on the local server over SSL on port 8443. In order to access Gitblit from another server, we need to tell it to accept connections on interfaces besides localhost. If you would like to access Gitblit over a standard HTTP connection make the following changes in ```/opt/gitblit/data/gitblit.properties```.\r\n\r\n```\r\nserver.httpPort = 8080\r\nserver.httpBindInterface =\r\n```\r\n\r\nIf you would like to access Gitblit over HTTPS then make the following changes in ```/opt/gitblit/data/gitblit.properties```.\r\n```\r\nserver.httpsPort = 8443\r\nserver.httpsBindInterface =\r\n```\r\nStart Gitblit by running the following command:\r\n```\r\n# java -jar gitblit.jar\r\n```\r\n\r\nYou should see output displaying the progress of Gitblitstarting up. Once you see a message like the one shown below, Gitblit will be available.\r\n```\r\nTODO\r\n```\r\nOpen a web browser and navigate to port 8080 on your host, you should be greeted by the Gitblit home page. Take a few minutes to explore the application.\r\n\r\nWhen you are done exploring Gitblit, go ahead and shut it down by entering ```Ctrl-c``` in the terminal. \r\n\r\n### 2. Configuring runit to manage Gitblit\r\n\r\nWhile the steps described above are great to fire up Gitblit and start exploring, when deploying Gitblit for use in production this simple approach has several issues. First, to ensure high availability of our git repository server we need a way to automate the management of the Gitblit process. Second, we need a way to manage logging. By configuring Gitblit as a managed service with ```runit```, we can take care of both of these concerns.\r\n\r\nIf you are still acting as the ```gitblit``` user, revert back to ```root``` so that we can configure ```runit``` to monitor Gitblit.\r\n\r\nFirst create a staging directory for our runit configuration by executing the following command :\r\n```\r\n# mkdir -p /etc/runit/gitblit\r\n```\r\n\r\nCreate a script named ```run``` in the new directory with the following contents:\r\n```\r\n#!/bin/sh -e\r\ncd /opt/gitblit\r\nexec 2>&1\r\nexec chpst -u gitblit java -jar gitblit.jar\r\n```\r\n\r\nNow make the script executable.\r\n```\r\n# chmod +x /etc/runit/gitblit/run\r\n```\r\n\r\nThe only thing left to do is configure logging for the service. First create the logging configuration by making a ```log``` sub directory under ```/ect/runit/gitblit```.\r\n```\r\n# mkdir /etc/runit/gitblit/log\r\n```\r\n\r\nNext, create a script named ```run``` in the ```log``` directory with the following contents:\r\n```\r\n#!/bin/sh\r\nexec chpst -u gitblit svlogd -tt /opt/gitblit/logs\r\n```\r\n\r\nMake the script executable.\r\n```\r\n# chmod +x /etc/runit/gitblit/log/run\r\n```\r\n\r\nThe ```/opt/gitblit/logs``` directory does not exit, so create it and change its ownership to the ```gitblit``` user.\r\n```\r\n# mkdir /opt/gitblit/logs\r\n# chown gitblit:gitblit /opt/gitblit/logs\r\n```\r\n\r\nThat is all of the configuration that we need to address process management and logging. Go ahead and deploy the service by creating a symbolic link from the ```/etc/service/gitblit``` directory to our staging directory.\r\n\r\n```\r\n# ln -s /etc/runit/gitblit /etc/service/gitblit\r\n```\r\n\r\nIf everything worked, you should see information being written to the logs and Gitblit should be available on port 8080. Please take some time to review the basics of ```runit``` if you are not clear on what we just setup. \r\n\r\n### Start Commiting Code!!!\r\n\r\nAt this point you have everything you need to setup a monitored Gitblit server with logging. Your next step should be to read the Gitblit documentation to configure Gitblit to suit your needs. A good place to start is the \"Gitblit Administration\" page.\r\n\r\n[http://gitblit.com/administration.html](http://gitblit.com/administration.html)\r\n\r\n### Contact Me\r\n\r\nIf you have any questions or would like further clarification, please feel free to shoot me an email. I would be glad to help. \r\n\r\nKevin\r\n\r\n<krchard@gmail.com>\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}